(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();window.paypal.Buttons({style:{shape:"rect",layout:"vertical",color:"gold",label:"paypal"},message:{amount:100},async createOrder(){var i;try{const o=await(await fetch("/api/orders",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({cart:[{id:"ABC_0987654",quantity:"1"}]})})).json();if(o.id)return o.id;const n=(i=o==null?void 0:o.details)==null?void 0:i[0],e=n?`${n.issue} ${n.description} (${o.debug_id})`:JSON.stringify(o);throw new Error(e)}catch(s){console.error(s),u(`Could not initiate PayPal Checkout...<br><br>${s}`)}},async onApprove(i,s){var o,n,e,r,c,p,d,f,y;try{const t=await(await fetch(`/api/orders/${i.orderID}/capture`,{method:"POST",headers:{"Content-Type":"application/json"}})).json(),a=(o=t==null?void 0:t.details)==null?void 0:o[0];if((a==null?void 0:a.issue)==="INSTRUMENT_DECLINED")return s.restart();if(a)throw new Error(`${a.description} (${t.debug_id})`);if(t.purchase_units){const h=((c=(r=(e=(n=t==null?void 0:t.purchase_units)==null?void 0:n[0])==null?void 0:e.payments)==null?void 0:r.captures)==null?void 0:c[0])||((y=(f=(d=(p=t==null?void 0:t.purchase_units)==null?void 0:p[0])==null?void 0:d.payments)==null?void 0:f.authorizations)==null?void 0:y[0]);u(`Transaction ${h.status}: ${h.id}<br>
          <br>See console for all available details`),console.log("Capture result",t,JSON.stringify(t,null,2))}else throw new Error(JSON.stringify(t))}catch(l){console.error(l),u(`Sorry, your transaction could not be processed...<br><br>${l}`)}}}).render("#paypal-button-container");function u(i){const s=document.querySelector("#result-message");s.innerHTML=i}
